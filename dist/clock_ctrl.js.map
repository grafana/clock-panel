{"version":3,"sources":["../src/clock_ctrl.js"],"names":["PanelCtrl","moment","_","panelDefaults","mode","timezone","tz","guess","bgColor","countdownSettings","endCountdownTime","seconds","milliseconds","add","toDate","endText","dateSettings","showDate","dateFormat","fontSize","fontWeight","timeSettings","showClock","clockType","customFormat","zoneSettings","showZone","zoneFormat","ClockCtrl","$scope","$injector","defaults","panel","timezones","names","Date","events","on","onInitEditMode","bind","onPanelTeardown","render","updateClock","addEditorTab","$timeout","cancel","nextTickPromise","renderTime","renderCountdown","now","date","format","time","getTimeFormat","zone","_z","name","timeLeft","duration","diff","formattedTimeLeft","asSeconds","previous","years","months","days","hours","minutes","scope","elem","$panelContainer","find","css","templateUrl"],"mappings":"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","file":"clock_ctrl.js","sourcesContent":["import {PanelCtrl} from 'app/plugins/sdk';\nimport moment from 'moment';\nimport 'moment-timezone';\nimport _ from 'lodash';\nimport './css/clock-panel.css!';\n\nconst panelDefaults = {\n  mode: 'time',\n  timezone: moment.tz.guess(),\n  bgColor: null,\n  countdownSettings: {\n    endCountdownTime: moment().seconds(0).milliseconds(0).add(1, 'day').toDate(),\n    endText: '00:00:00'\n  },\n  dateSettings: {\n    showDate: false,\n    dateFormat: 'YYYY-MM-DD',\n    fontSize: '20px',\n    fontWeight: 'normal'\n  },\n  timeSettings: {\n    showClock: true,\n    clockType: '24 hour',\n    customFormat: 'HH:mm:ss',\n    fontSize: '60px',\n    fontWeight: 'normal'\n  },\n  zoneSettings: {\n    showZone: false,\n    zoneFormat: 'offsetAbv',\n    fontSize: '20px',\n    fontWeight: 'normal'\n  }\n};\n\nexport class ClockCtrl extends PanelCtrl {\n  constructor($scope, $injector) {\n    super($scope, $injector);\n    _.defaults(this.panel, panelDefaults);\n    _.defaults(this.panel.timeSettings, panelDefaults.timeSettings);\n    this.timezones = moment.tz.names();\n\n    if (!(this.panel.countdownSettings.endCountdownTime instanceof Date)) {\n      this.panel.countdownSettings.endCountdownTime = moment(this.panel.countdownSettings.endCountdownTime).toDate();\n    }\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\n    this.events.on('panel-initialized', this.render.bind(this));\n\n    this.updateClock();\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', 'public/plugins/grafana-clock-panel/editor.html', 2);\n  }\n\n  onPanelTeardown() {\n    this.$timeout.cancel(this.nextTickPromise);\n  }\n\n  updateClock() {\n    if (this.panel.mode === 'time') {\n      this.renderTime();\n    } else {\n      this.renderCountdown();\n    }\n\n    this.nextTickPromise = this.$timeout(this.updateClock.bind(this), 1000);\n  }\n\n  renderTime() {\n    let now;\n\n    now = moment().tz(this.panel.timezone);\n\n    this.date = now.format(this.panel.dateSettings.dateFormat);\n\n    this.time = now.format(this.getTimeFormat());\n\n    if (this.panel.zoneSettings.zoneFormat === 'name') {\n      this.zone = now._z.name\n    } else if (this.panel.zoneSettings.zoneFormat === 'offsetAbv') {\n      this.zone = now.format('Z z');\n    } else if (this.panel.zoneSettings.zoneFormat === 'offset') {\n      this.zone = now.format('Z');\n    } else if (this.panel.zoneSettings.zoneFormat === 'abv') {\n      this.zone = now.format('z');\n    }\n  }\n\n  getTimeFormat() {\n    if (this.panel.timeSettings.clockType === '24 hour') {\n      return 'HH:mm:ss';\n    }\n\n    if (this.panel.timeSettings.clockType === '12 hour') {\n      return 'h:mm:ss A';\n    }\n\n    return this.panel.timeSettings.customFormat;\n  }\n\n  renderCountdown() {\n    if (!this.panel.countdownSettings.endCountdownTime) {\n      this.time = this.panel.countdownSettings.endText;\n    }\n\n    const now = moment();\n    const timeLeft = moment.duration(moment(this.panel.countdownSettings.endCountdownTime).diff(now));\n    let formattedTimeLeft = '';\n\n    if (timeLeft.asSeconds() <= 0) {\n      this.time = this.panel.countdownSettings.endText;\n      return;\n    }\n\n    var previous = '';\n\n    if (timeLeft.years() > 0) {\n      formattedTimeLeft = timeLeft.years() === 1 ? '1 year, ' : timeLeft.years() + ' years, ';\n      previous = 'years';\n    }\n    if (timeLeft.months() > 0 || previous === 'years') {\n      formattedTimeLeft += timeLeft.months() === 1 ? '1 month, ' : timeLeft.months() + ' months, ';\n      previous = 'month';\n    }\n    if (timeLeft.days() > 0 || previous === 'months') {\n      formattedTimeLeft += timeLeft.days() === 1 ? '1 day, ' : timeLeft.days() + ' days, ';\n      previous = 'days';\n    }\n    if (timeLeft.hours() > 0 || previous === 'days') {\n      formattedTimeLeft += timeLeft.hours() === 1 ? '1 hour, ' : timeLeft.hours() + ' hours, ';\n      previous = 'hours';\n    }\n\n    if (timeLeft.minutes() > 0 || previous === 'hours') {\n      formattedTimeLeft += timeLeft.minutes() === 1 ? '1 minute, ' : timeLeft.minutes() + ' minutes, ';\n    }\n\n    formattedTimeLeft += timeLeft.seconds() === 1 ? '1 second ' : timeLeft.seconds() + ' seconds';\n    this.time = formattedTimeLeft;\n  }\n\n  link(scope, elem) {\n    this.events.on('render', () => {\n      const $panelContainer = elem.find('.panel-container');\n\n      if (this.panel.bgColor) {\n        $panelContainer.css('background-color', this.panel.bgColor);\n      } else {\n        $panelContainer.css('background-color', '');\n      }\n    });\n  }\n}\n\nClockCtrl.templateUrl = 'module.html';\n"]}